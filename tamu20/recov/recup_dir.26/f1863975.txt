  // Korean
           return "KR";

        case "zh-tw":
           // Taiwan
           return "TW";

        case "zh-hk":
           // Chinese(Hong Kong)
           return "HK";

        case "pt-br":
           // Portuguese(Brazilian)
           return "BR";

        case "sv":
           // Swedish
           return "SE";

        case "it":
           // Italian(Standard)
           return "IT";

        case "da":
           // Denmark
           return "DK";

        case "nl":
           // Dutch(Standard)
           return "NL";

        case "nl-be":
           // Dutch(Belgian)
           return "BE";

        case "no":
           return "NO";

        case "zh-cn":
           return "CN";

        case "ru":
           //  Russian
           return "RU";

        case "cs":
           // Czech
           return "CZ";

        case "hu":
           // Hungarian
           return "HU";

       case "fi":
           return "FI";

       case "pl":
           // Polish
           return "PL";

       case "pt":
           return "PT";

       case "el":
           return "GR";

       case "tr":
          // Turkish
          return "TR";

        default: // default to US if unknown
            return "US";
    }

}

function setCountry()
{
    var MSNRegKey = oMarsSignup.RegKey;
    MSNRegKey.Init("HKLM","Software\\Microsoft\\MSN6\\Setup",false);
    MSNRegKey.WriteValue("CountryID",oFS.idCountrySelection.value);
    oMarsSignup.country = oFS.idCountrySelection.value;
}

function IsRegionVisible()
{
    if (document.all.idRegionSelection.style.display == "none")
        return false;

    return true;
}

function IsZipCodeVisible()
{
   if (document.all.idPostal.style.display == "none")
       return false;

   return true;
}

function saveData()
{
}

function validData()
{
    var sTitle = "";
    if (trim(oFS.idCountrySelection.value) == "")
    {
        sTitle = idCountryLabel.innerText;
        displayNote (oFS.idCountrySelection, sTitle,
            /* locstart address.selectcountry.text */ "Please select a country/region." /* locend */);
        oFS.idCountrySelection.focus();
        return false;
    }
    return true;
}

function nav()
{
    saveData();

    if(event.srcElement.id != "btnBack")
    {
        if( !validData() )
            return;

        oMarsSignup.InitializeMarket();

        if(window.external.MarketID != "")
        {
            if( !USMarket() )
            {
                refreshLMObjects();
                oMarsSignup.PutProperty("SignupType","Other");
                AddLanConnectors();
                setOnlyConnectorAsDefault("lan");
                location.href = "signupServer.htm";
                return;
            }
            else
            {
                // a US market. check IAOnly flag
                if (oMarsSignup.GetProperty("IAOnly") == "1" || oMarsSignup.GetProperty("RAC") == "1")
                {                    
                    setupForModem();
                }
                else                
                    location.href = "newAccount.htm";
                
                return false;
            }
        }
        else
        {
            ShowErrorMessage(/* locstart address.dialog.needmarket.title */"MSN Explorer"/* locend */,/* locstart address.needmarket.text */"Please select a country before continuing."/* locend */
                             ,false
                             ,122
                             ,""
                             ,MB_OK
                            );
        }

    }
    else
    {
        location.href = "welcome.htm";
    }
    return false;
}

function customTab(oForward,oBack)
{
    displayNote(oForward,"Tabbing","");
    if( event.keyCode == 9)
    {
        if(event.shiftKey)
        {
            oBack.focus();
        }
        else
        {
            oForward.focus();
        }
    }
}

//-->
</SCRIPT>

<BODY>
<form id="oFS" onsubmit="return(stub())">

<table id="tbl0" cellpadding="0" cellspacing="0"><tr><td id="td0" valign="top" height="5%">
<div id=divBrand><img id="imgBrand" title="MSN Explorer" src="msn://rsrc/signup.gif" align="right"></div>
<div id=divHR></div>
</td></tr><tr><td id="td1" height="90%" valign="top"><div id="div0"><span class="head"><!-- locstart signup.address.text/ -->Please tell us your location<!-- locend --></span>

<div id="divControls" class="controls">
<br><br>
<table cellspacing="10" cellpadding="5">
    <TR ID="idCountryField">
        <TD><LABEL ID="idCountryLabel" FOR="idCountrySelection"><!-- locstart address.country.label/Label for list box -->Countr<u>y</u>/Region<!-- locend --></LABEL></TD>
        <TD ID="idCountrySelectionTD">
            <SELECT tabindex="1" ID="idCountrySelection" OnChange="OnCountryChange();" ></SELECT>
        </TD>
    </TR>
    <TR ID="idRegionField">
     <TD><LABEL ID="idRegionLabel" FOR="idRegionSelection"><!-- locstart address.state.label/Label for list box --><U>S</U>tate<!-- locend --></LABEL></TD>
     <TD id="idRegionSelectionTD">
         <SELECT tabindex="2" ID="idRegionSelection" ></SELECT>
     </TD>
    </TR>
    <TR ID="idPostalField">
        <TD><LABEL ID="idPostalLabel" FOR="idPostal"><!-- locstart address.zipcode.label/Label for Zip Code --><U>Z</U>ip Code<!-- locend --></LABEL></TD>
        <TD>
             <INPUT  tabindex="3" ID="idPostal" TYPE="text" MAXLENGTH="10" ACCESSKEY.loc="[! address.zipcode.accesskey/Zip or postal code accesskey ]" ACCESSKEY="Z"
             onselectstart="event.returnValue = true; event.cancelBubble = true;"
             ondragstart="event.returnValue = true; event.cancelBubble = true;"  >
        </TD>
    </TR>
</table>
</div>
</div>
</td></tr><tr><td id="td2" valign="bottom" height="5%" align="left">
<div id="divNav" >
<div class="infotext" >

<button nowrap="true" onclick="showHelp('help_privacy.htm')" tabindex="4" class="infobutton" id="btnInfo" ACCESSKEY.loc="[! address.privacyinfo.key/access key for the privacy info label]" accesskey="p" TITLE.loc="[! address.privacyinfo.title/title for helpinfo ]" TITLE="Our privacy policy regarding personal information">
<table>
<tr>
    <td>
        <img id="imgInfo" src="msn://@signup.mar@/signup_info.gif" align="left" style="vertical-align: middle;">
    </td>
    <td>&nbsp;</td>
    <td id=oAccBtnInfo>
        <div nowrap="true"><!-- locstart address.privacyinfo.label/Text for help link-Need hard breaks where appropriate -->
        <u>T</u>ell me more about how MSN protects my <br>personal information</div>
        <!-- locend -->
   </td>
</tr>
</table>
</button>

</div>
<div id=divHR></div>
<table id="tblNav" cellpadding="0" cellspacing="0" >
<tr><td height="5" id="tdnav1" align="left"></td>
<td align="right">
<button class="nav" id="btnBack" tabindex="42" dataFld="true"><img id="imgBack" class="arowback" src="msn://@signup.mar@/cn_aleft.gif" WIDTH="10" HEIGHT="12"><u>B</u>ack</button>&nbsp;
<button class="nav" id="btnNext" tabindex="41" dataFld="true"  accesskey="c"><u>C</u>ontinue<img id="imgNext" class="arownext" src="msn://@signup.mar@/cn_aright.gif" WIDTH="10" HEIGHT="12"></button>&nbsp;
</td></tr>
</table>
</div>
</td></tr></table>
</form>
</body>
</HTML>
//<SCRIPT LANGUAGE=javascript>
// Error Messages
var ERROR_MSG_FAILED_TO_LOAD_XML_FILE = "Failed to load the xml file";

var g_fIsCountrySupported   = true;
var g_oTimezoneList, g_oCountryList, g_oRegionList, g_oRegionTypes, g_oPostalTypes;
var g_oAddressInfo = null;


function AddressInfo(fAddEmptySelection, idCountryFieldElem, idCountryLabelElem, idCountrySelectionTDElem,
                     idRegionFieldElem, idRegionLabelElem, idRegionSelectionTDElem,
                     idPostalFieldElem, idPostalLabelElem, idPostalElem,
                     idTimezoneFieldElem, idTimezoneLabelElem, idTimezoneSelectionTDElem,
                     idCountryDataSeperatorElem)
{
    this.idCountryField = idCountryFieldElem;
    this.idCountryLabel = idCountryLabelElem;
    this.idCountrySelectionTD = idCountrySelectionTDElem;

    this.idRegionField = idRegionFieldElem;
    this.idRegionLabel = idRegionLabelElem;
    this.idRegionSelectionTD = idRegionSelectionTDElem;

    this.idPostalField = idPostalFieldElem;
    this.idPostalLabel = idPostalLabelElem;
    this.idPostal = idPostalElem;

    this.idTimezoneField = idTimezoneFieldElem;
    this.idTimezoneLabel = idTimezoneLabelElem;
    this.idTimezoneSelectionTD = idTimezoneSelectionTDElem;

    this.idCountryDataSeperator = idCountryDataSeperatorElem;
    this.fAddEmptySelection = fAddEmptySelection;
}

function LoadXMLFile(xmlfile)
{
    var xmldoc = oUtils.GetXMLFromMarsStore("ui.mar", xmlfile);
    if (xmldoc != null && xmldoc.parseError.errorCode != 0)
	{
	    var szErrMsg = xmldoc.parseError.reason + xmlfile;
	    xmldoc = null;
		ShowErrorMessage(ERROR_MSG_FAILED_TO_LOAD_XML_FILE, szErrMsg);
	}
    return xmldoc;
}

function InitAddressInfo(szXmlPath, fAddEmptySelection,
                         idCountryFieldElem, idCountryLabelElem, idCountrySelectionTDElem,
                         idRegionFieldElem, idRegionLabelElem, idRegionSelectionTDElem,
                         idPostalFieldElem, idPostalLabelElem, idPostalElem,
                         idTimezoneFieldElem, idTimezoneLabelElem, idTimezoneSelectionTDElem,
                         idCountryDataSeperatorElem)
{
    g_oAddressInfo = new AddressInfo(fAddEmptySelection, idCountryFieldElem, idCountryLabelElem, idCountrySelectionTDElem,
                                     idRegionFieldElem, idRegionLabelElem, idRegionSelectionTDElem,
                                     idPostalFieldElem, idPostalLabelElem, idPostalElem,
                                     idTimezoneFieldElem, idTimezoneLabelElem, idTimezoneSelectionTDElem,
                                     idCountryDataSeperatorElem);

    // load the countries xml file
    g_oCountryList = LoadXMLFile(szXmlPath + "country.xml");
    if (g_oCountryList == null)
        return false;


    // load the regions file
    if (g_oAddressInfo.idRegionField != null)
    {
	    g_oRegionList = LoadXMLFile(szXmlPath + "region.xml");
        if (g_oRegionList == null)
            return false;


        // load the region labels
        g_oRegionTypes = LoadXMLFile(szXmlPath + "regionlabel.xml");
        if (g_oRegionTypes == null)
            return false;

    }

    // load the postal labels
    if (g_oAddressInfo.idPostalField != null)
    {
        g_oPostalTypes = LoadXMLFile(szXmlPath + "postalLabel.xml");
        if (g_oPostalTypes == null)
            return false;
    }

    // load the timezone
    if (g_oAddressInfo.idTimezoneField != null)
    {
        g_oTimezoneList = LoadXMLFile(szXmlPath + "timezone.xml");
        if (g_oTimezoneList == null)
            return false;

    }

    return true;
}

function GetCountryNode(xmldoc, szName, szValue)
{
    var onode = null;
    if (xmldoc == null)
        return null;

    try
    {
        var oroot = xmldoc.documentElement;
        onode = oroot.selectSingleNode("country [@" + szName + "='" + szValue + "']");
    }
    catch(e)
    {
       onode = null;
    }

	return onode;
}

function AddSelectOption(szValue, szText, fSelected)
{
    return "<OPTION value='" + szValue + "' " + (fSelected ? "SELECTED" : "") + ">" + szText + "</OPTION>";
}

function FillCountryList()
{
    if (g_oAddressInfo == null || g_oCountryList == null)
        return;

    if (g_oAddressInfo.idCountrySelectionTD == null)
        return;

    var oSelectCountry = g_oAddressInfo.idCountrySelectionTD.children(0)
    if (oSelectCountry == null)
        return;

    // The LABEL-FOR does not work for SELECT elements in IE5.0
    // Hence need to set the SELECT title to same value as LABEL
    oSelectCountry.title = g_oAddressInfo.idCountryLabel.innerText;

    var oroot = g_oCountryList.documentElement;
    var oNodeList = oroot.selectNodes("country");
    if (oNodeList != null)
    {
	    var sSelectTag = "<SELECT ID='idCountrySelection' tabindex='1' onchange='OnCountryChange()' ACCESSKEY='y'>";
	    var sOptions = "";
	    if (g_oAddressInfo.fAddEmptySelection)
	        sOptions += AddSelectOption("", "", true);
		for (i=0; i < oNodeList.length; i++)
		{
		   var oNode = oNodeList(i);
		   sOptions += AddSelectOption(GetXmlAttribute(oNode, "code"), GetXmlAttribute(oNode, "name"), (sOptions == ""));
		}

        sSelectTag += sOptions + "</SELECT>";
        g_oAddressInfo.idCountrySelectionTD.innerHTML = sSelectTag;
    }
}

function OnCountryChange()
{
    var oSelectTemp;
    var oListTemp;
    var oCountry = null;
    var oRoot = null;
    var olabel = null;
    var oNode = null;
	var szGEOID = "";
    if (g_oCountryList == null)
        return;

    // Get the current country selection
    if (g_oAddressInfo.idCountrySelectionTD == null)
        return;

    var oSelectCountry = g_oAddressInfo.idCountrySelectionTD.children(0);
    if (oSelectCountry == null)
        return;

    var oCountryField = g_oAddressInfo.idCountryField;
    var szCode = "";
    if (g_fIsCountrySupported)
    {
        if (oCountryField != null)
            oCountryField.style.display = "inline";

        oSelectCountry.style.display = "inline";

        var nIndex = oSelectCountry.selectedIndex;
        szCode = oSelectCountry.options(nIndex).value;
        oCountry = GetCountryNode(g_oCountryList, "code", szCode);
		if (oCountry != null)
		{
			szGEOID = GetXmlAttribute(oCountry, "geoid");
			szRegionType = GetXmlAttribute(oCountry, "regiontype");
			oCountryRegions = GetCountryNode(g_oRegionList, "geoid", szGEOID);

			var MSNRegKey = oMarsSignup.RegKey;
			MSNRegKey.Init("HKLM","Software\\Microsoft\\MSN6\\Setup",false);
			MSNRegKey.WriteValue("CountryID",szGEOID);
			oMarsSignup.country = oFS.idCountrySelection.value;
		}

    }
    else
    {
        oSelectCountry.style.display = "none";
        if (oCountryField != null)
            oCountryField.style.display = "none";
    }

    positionNavBar();
}

function SetShortCutKeyAndLabel(szLabel, szAlt, elemlabel, elem)
{
    if (szAlt != "" && szLabel != "")
    {
        var szTemp = szLabel
        var nAlt = parseInt(szAlt);
		if ((!isNaN(nAlt)) && (nAlt > 0) && (nAlt <= szLabel.length))
		{
		    var szAccessKey = szLabel.substring(nAlt-1, nAlt);
			szTemp = szLabel.substring(0, nAlt-1) + "<u>" + szAccessKey + "</u>" + szLabel.substring(nAlt);

			if (elem != null)
			{
			    elem.accessKey = szAccessKey;
			}
		}
		elemlabel.innerHTML = szTemp;
    }
    else
    {
        elemlabel.innerHTML = szLabel;
    }
}
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
<object classid="clsid:1745EDC4-CDCE-4e20-B91E-312F0C2AD16B" id="msncf" height="0" width="0" style="display:none"></object>
<link id="lnk0" rel="stylesheet" type="text/css" href="global.css">
<script language="jscript" src="global.js"></script>
<title></title>
<script LANGUAGE="javascript">
<!--
var oLM;

function Init()
{
	oMarsSignup.PutProperty("existingonly","1");
    location.href = "signupServer.htm";
}
function valiData()
{
    return true;
}
function saveData()
{
    saveIt();
}
function loadData()
{
}
function nav()
{
    saveData();
    if(event.srcElement.id != "btnBack")
    {
        if( !valiData() )
            return;

        location.href = "";
    }
    else
    {
        location.href = "";
    }
    return false; //return false for form
}
//-->
</script>

</head>
<body>
</body>
</html>
