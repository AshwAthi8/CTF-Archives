PS & ACTIONS
		updateXML(xmlOOBE);

		var xslOOBE = new ActiveXObject(msxmlControl);
		xslOOBE.load("SecOOBE.xsl");
		

        function minInt( x, y )
        {
            if (x < y)
            {
                return x;
            }
            else
            {
                return y;
            }
        }

        function maxInt( x, y )
        {
            if (x > y)
            {
                return x;
            }
            else
            {
                return y;
            }
        }

		function executeAction(actionID)
		{
			try
			{
				oSec.DoAction(actionID);
			}
			catch(ex)
			{
				var message = xmlOOBE.selectSingleNode("/SecOOBE/errorDoAction/@text").value;
				alert(message);	
			}
		}
		
        function executeCmd(cmdString)
        {
            try
            {
				var shellObj = new ActiveXObject("WScript.Shell");
    			shellObj.Run(cmdString);
            }
            catch(ex)
            {
                var message = xmlStatic.selectSingleNode("/SecOOBE/errorDoAction/@text").value;
                alert(message);
            }
		}
		
        function executeChm(cmdString)
        {
            executeCmd('"%SystemRoot%\\hh.exe" ' + cmdString);
        }
		
		function executeCpl(cmdString)
		{
            execCmd('"%SystemRoot%\\system32\\control.exe" ' + cmdString);
		}
		
		function updateXML(oXML)
		{
			if (oXML == null)
				return;
			
			// Get and enumerate the steps
			var nodeSteps = oXML.selectNodes("/SecOOBE/stepList/step");
			var i;
			for (i=0; i < nodeSteps.length; i++)
			{
				customizeStep(nodeSteps[i]);
			}			
		}
		
		function customizeStep(nodeStep)
		{
			switch(nodeStep.getAttribute("stepID"))
			{
				case "1":
					// Add customization for stepID=1
					// Use this code to enum the step's actions:
					//     var nodeActions = nodeStep.selectNodes("action");

					break;
				case "2":
					// Add customization for stepID=2
					var bIsAUConfigured = false;
					try 
					{
					    bIsAUConfigured = oSec.IsAutoUpdateConfigured();
					}
					catch ( ex )
					{
					    bIsAUConfigured = false;					
					}
					
					if (bIsAUConfigured)
					{
						nodeStep.setAttribute("description", nodeStep.getAttribute("description_alt"));
						var nodeActions = nodeStep.selectNodes("action");
						var i=0;
						for (i=0; i < nodeActions.length; i++)
						{
							nodeActions[i].setAttribute("visible", "0");
						}
					}
					break;
			}
		}
			
        function sizeMainWindow()
        {
            var area;

            try
            {
                var area_string = oSec.GetWorkingAreaInfo();
                area = area_string.split(",");

                if (area.length != 4)
                {
                    throw "Unexpected info format.";   
                }
            }
            catch(ex)
            {
                // Fall back to best guess.
                area = new Array(4);
                area[LEFT]   = 0;
                area[TOP]    = 0;
                area[WIDTH]  = screen.availWidth;
                area[HEIGHT] = screen.availHeight;
            }

            var w = minInt(area[WIDTH], DefWindowWidth);
            var h = minInt(area[HEIGHT], DefWindowHeight);

            window.resizeTo(w, h);

            // Center in middle of available area.
            // Need  " - 0 " to avoid string concatenation.
            var left = (area[WIDTH] - w)/2 + (area[LEFT] - 0);
            var top  = (area[HEIGHT] - h)/2 + (area[TOP] - 0);

            window.moveTo(left, top);
        }

        sizeMainWindow();
        
    </script>
    
	<script language="jscript" event="onload" for="window">

        // SET THE DOCUMENT TITLE
        document.title = xmlOOBE.selectSingleNode("/SecOOBE/@title").value;

		// RENDER THE XSL
		divMain.innerHTML = xmlOOBE.transformNode(xslOOBE);

		divBody.style.posHeight = document.body.clientHeight - divHeader.offsetHeight;

        document.getElementById("buttonFinish").focus();
        
    </script>
    
    <script language="jscript" event="onresize" for="window">

		divBody.style.posHeight = document.body.clientHeight - divHeader.offsetHeight;
        
    </script>

    <script language="jscript" event="onclick" for="buttonFinish">
		
		function confirmOptions()
		{
			var message;
			var title;
			var yesText;
			var noText;
			var yesAccessKey;
			var noAccessKey;
		}
		
		function dialogOptions()
		{
			var message;
			var CPLPrefixText;
			var CPLLinkText;
			var CPLSuffixText;
			var OKText;
			var title;
			var errorText;
		}
		
		function showConfirm()
		{
			var dlgOptions = new confirmOptions();
			var confirmDialog = xmlOOBE.selectSingleNode("/SecOOBE/confirmDialog");
			
			dlgOptions.message = confirmDialog.getAttribute("text");
			dlgOptions.title = confirmDialog.getAttribute("title");
			dlgOptions.yesText = confirmDialog.getAttribute("yesText");
			dlgOptions.noText = confirmDialog.getAttribute("noText");
			dlgOptions.yesAccessKey = confirmDialog.getAttribute("yesAccessKey");
			dlgOptions.noAccessKey = confirmDialog.getAttribute("noAccessKey");

			var width = confirmDialog.getAttribute("dialogWidth");
			var height = confirmDialog.getAttribute("dialogHeight");
			
			return window.showModalDialog("confirm.htm", dlgOptions, "dialogHeight: " + height + "px; dialogWidth: " + width + "px; center: yes; resizable: no; help: no; scrollbars: no; status: no;");
		}
		
		function showAlert(message, dlgHeight, cplPrefix, cplText, cplSuffix)
		{
			var dlgOptions = new dialogOptions();
			var errorDialog = xmlOOBE.selectSingleNode("/SecOOBE/errorDialog");
			
			dlgOptions.title = errorDialog.getAttribute("title");
			dlgOptions.message = message;
			dlgOptions.OKText = errorDialog.getAttribute("OKText");
			dlgOptions.CancelText = errorDialog.getAttribute("CancelText");
			dlgOptions.CPLPrefixText = cplPrefix;
			dlgOptions.CPLLinkText = cplText;
			dlgOptions.CPLSuffixText = cplSuffix;
			dlgOptions.errorText = xmlOOBE.selectSingleNode("/SecOOBE/errorDoAction/@text").value;
			
			var width = errorDialog.getAttribute("dialogWidth");
			var height = dlgHeight;

			return window.showModalDialog("error.htm", dlgOptions, "dialogHeight: " + height + "px; dialogWidth: " + width + "px; center: yes; resizable: no; help: no; scrollbars: no; status: no;");
		}

		// If the firewall was disabled before Finish was clicked, notify the user.
		var bFwEnabled = false;
		var bFwServiceOffButAutomatic = false;
		try 
		{
		    bFwEnabled = oSec.IsFireWallEnabledByDefault();
		}
		catch (ex)
		{
		    bFwEnabled = false;
		    if (ex.number == ERROR_SERVICE_NOT_ACTIVE)
		    {
		        bFwServiceOffButAutomatic = true;
		    }
		}
		if (!bFwEnabled)
		{
		    if (bFwServiceOffButAutomatic)
		    {
			    var message = xmlOOBE.selectSingleNode("/SecOOBE/errorServiceNotRunning/@text").value;
			    var dlgHeight = xmlOOBE.selectSingleNode("/SecOOBE/errorServiceNotRunning/@dialogHeight").value;
			    var prefixText = xmlOOBE.selectSingleNode("/SecOOBE/errorServiceNotRunning/@CPLPrefixText").value;
			    var linkText = xmlOOBE.selectSingleNode("/SecOOBE/errorServiceNotRunning/@CPLLinkText").value;
			    var suffixText = xmlOOBE.selectSingleNode("/SecOOBE/errorServiceNotRunning/@CPLSuffixText").value;
			    if ( showAlert(message, dlgHeight, prefixText, linkText, suffixText) )
                {
			        window.close();
			    }
			    return;		    
		    }
		    else
		    {
			    var message = xmlOOBE.selectSingleNode("/SecOOBE/errorFirewallChanged/@text").value;
			    var dlgHeight = xmlOOBE.selectSingleNode("/SecOOBE/errorFirewallChanged/@dialogHeight").value;
			    var prefixText = xmlOOBE.selectSingleNode("/SecOOBE/errorFirewallChanged/@CPLPrefixText").value;
			    var linkText = xmlOOBE.selectSingleNode("/SecOOBE/errorFirewallChanged/@CPLLinkText").value;
			    var suffixText = xmlOOBE.selectSingleNode("/SecOOBE/errorFirewallChanged/@CPLSuffixText").value;
			    if ( showAlert(message, dlgHeight, prefixText, linkText, suffixText) )
                {
                    try 
                    {
			            oSec.FinishOOBE();
			        }
			        catch (ex)
			        {
			        }        			    
			        window.close();
			    }
			    return;
		    }
		}
		
		// Tell the user that the Firewall will be disabled now.
		if (showConfirm())
		{
			try
			{
				oSec.DisableFirewall();
			}
			catch(ex)
			{
				var message;
				var dlgHeight;
			    var prefixText;
			    var linkText;
			    var suffixText;
				
				if (ex.number == E_ACCESSDENIED)	// Insufficient rights to disable the firewall
				{
					message = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewallNoRights/@text").value;
					dlgHeight = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewallNoRights/@dialogHeight").value;
			        var prefixText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewallNoRights/@CPLPrefixText").value;
			        var linkText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewallNoRights/@CPLLinkText").value;
			        var suffixText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewallNoRights/@CPLSuffixText").value;					
				}
				else
				{
					message = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewall/@text").value;
					dlgHeight = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewall/@dialogHeight").value;
			        var prefixText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewall/@CPLPrefixText").value;
			        var linkText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewall/@CPLLinkText").value;
			        var suffixText = xmlOOBE.selectSingleNode("/SecOOBE/errorDisableFirewall/@CPLSuffixText").value;					
				}
				// On error, alert the user but don't finish OOBE
				if(showAlert(message, dlgHeight, prefixText, linkText, suffixText))
				{
				    // if the user clicked OK then close UI
				    window.close();
				}
				return;
			}
			
			try
			{
			    oSec.FinishOOBE();
			}
			catch ( ex )
			{
			}
			window.close();
		}
		
    </script>
    
        <HTA:APPLICATION 
            APPLICATIONNAME="SecOOBE" 
            BORDER="thick"
            CAPTION="no"
            SHOWINTASKBAR="yes"
            SINGLEINSTANCE="yes"
            SYSMENU="yes"
            WINDOWSTATE="normal"
            SELECTION="no"
            SCROLL="no"
            NAVIGABLE="yes"
            ICON="ico_server.ico"
        />

	<body>
		<div id="divMain"></div>
	</body>
</html>
<?xml version="1.0"?>
<!--loc: keep the inline html markup below to mark the access key -->
<SecOOBE title="Windows Server 