    GoNavigate(CKPT_ACT_MSG);      
            else
                GoNavigate(CKPT_ICONN);        
        }
        else
        {
            
            
            
            
            g_IgnoreDialErr = true;

            if ( APP_REG_MODE == window.external.Directions.get_AppMode() )
            {
                Navigate("html\\oemreg\\roemadd.htm");
            }
            else
            {
                Navigate("html\\oemreg\\oemadd.htm");
            }
        }
    }
    else
    {
        g_IgnoreDialErr = true;

        PopCKPT(CKPT_REGDIAL);
        PopCKPT(CKPT_REGISTER3);
        PopCKPT();    
        CheckFinishStatus();
        if (InReminderMode())
            GoNavigate(CKPT_ACT_MSG);    
        else
            GoNavigate(CKPT_ICONN);      
    }

    if ((g_PostToMS && g_PostToOEM && (1 == RegisterObj.get_PostToOEM)) ||
        ((0 == RegisterObj.get_PostToOEM) && g_PostToMS))
    {
        if ( APP_REG_MODE == window.external.Directions.get_AppMode() )
        {
            
            
            
            window.external.StopRemind(REMIND_REG);
        }
        else
        {
            
            
            
            window.external.DeleteRemind(REMIND_REG);
        }
    }
}






var SORT_DEFAULT                = 0x0;     

var LANG_JAPANESE               = 0x11;
var LANG_KOREAN                 = 0x12;
var LANG_CHINESE                = 0x04;

var SUBLANG_KOREAN              = 0x01;    
var SUBLANG_CHINESE_TRADITIONAL = 0x01;    
var SUBLANG_CHINESE_SIMPLIFIED  = 0x02;    
var SUBLANG_DEFAULT             = 0x01;    









function MAKELANGID(p, s)
{
    return (( s << 10) | p);
}

function MAKELCID(lgid, srtid)
{
    return ((srtid << 16) | lgid);
}

function IsKoreanLocale() {
   var language = ApiObj.get_UserDefaultUILanguage();
   if (language == MAKELCID(MAKELANGID(LANG_KOREAN, SUBLANG_KOREAN), SORT_DEFAULT)) {
      return true;
   }

   return false;
}

function IsFarEastLocale()
{
    
    
    var language = ApiObj.get_UserDefaultUILanguage();

    if (language == MAKELCID(MAKELANGID(LANG_KOREAN, SUBLANG_KOREAN), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_TRADITIONAL), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_SIMPLIFIED), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_JAPANESE, SUBLANG_DEFAULT), SORT_DEFAULT))
        return true
    else
        return false;
}

function StorePid()
{
    var strPid = "";

    for (var i = 0; i < 4; i++)
    {
        strPid += g.edtProductKey[i].value;
        strPid += '-';
    }

    strPid += g.edtProductKey[i].value;

    PidObj.set_PID(strPid);
}





var g_AU_radiosticky = null;  
var L_IntroSlipstream_Text = "Grazie a Aggiornamenti automatici, è possibile controllare regolarmente la disponibilità di importanti aggiornamenti per il computer e installarli automaticamente. Gli aggiornamenti possono essere patch per la protezione, aggiornamenti critici e service pack.";
var L_IntroUpdate_Text = "Grazie per avere installato Windows XP Service Pack 2. Prima di completare il processo di installazione, effettuare la sottoscrizione a Aggiornamenti automatici. Grazie a Aggiornamenti automatici, è possibile controllare regolarmente la disponibilità di importanti aggiornamenti per il computer e installarli automaticamente. Gli aggiornamenti possono essere patch per la protezione, aggiornamenti critici e service pack.";

function AutoUpdateLoadMe()
{
    InitFrameRef();

    
    if (window.external.GetNoWelcomeFinish())
    {
        g.btnNext = g.btnFinish;
        g.FiniBtnLocalText.style.display = "inline";
        g.btnFinish.style.display = "inline";
    }
    else
    {
        g.NextBtnLocalText.style.display = "inline";
        g.btnNext.style.display = "inline";
    }

    
    
    g.tabl3.style.width="105%"    

    
    
    
    if (g_AU_radiosticky == null)
        g.btnNext.disabled = true;
    else if (g_AU_radiosticky == 1)
        g.radioAgree.checked = true;
    else
        g.radioDisAgree.checked = true;

    InitNewButtons();
    g.btnNext.onclick = AUNextBtnHandler;

    if (APP_UPDATE_MODE == window.external.Directions.get_AppMode())
    {
        g.BackBtnLocalText.style.display = "none";
        g.btnBack.style.display = "none";
        g_FirstFocusElement = g.au_privacy_policy_link;
        g_FirstFocusElement.focus();
        g.AutoUpdateIntro.innerText = L_IntroUpdate_Text;
    }
    else
    {
        g_FirstFocusElement = g.btnBack;
        g_FirstFocusElement.focus();
        g.AutoUpdateIntro.innerText = L_IntroSlipstream_Text;
    }

    try
    {
        g.document.body.onkeydown = AUOnKeyDown;
    }
    catch(e)
    {
    }
}

function AUNextBtnHandler()
{
    StoreAU();
    GoNext();
}

function AUOnKeyDown()
{

    if (KeyEsc == g.event.keyCode)
    {
        g.event.returnValue = false;
        g.event.keyCode = 0;
    }

    OnKeyDown();
}

function AURadioClicked()
{
    
    if(g.btnNext.disabled && (g.radioAgree.checked || g.radioDisAgree.checked))
    {
        g.btnNext.onmouseover = HandleNextButtonMouseOver;
        g.btnNext.onmouseout  = HandleNextButtonMouseOut;
        g.btnNext.onmousedown = HandleNextButtonMouseDown;
        g.btnNext.className="newbuttonsNext";
        g.btnNext.disabled = false;
        g.btnNext.onclick = AUNextBtnHandler;
        g.btnNext.focus();
    }

    if (g.radioAgree.checked)
    {
        g_AU_radiosticky=1;
    }
    else
    {
        g_AU_radiosticky=2;
    }
}

function StoreAU()
{
    AutoUpdateObj.set_Acceptance = g.radioAgree.checked;
}



function navigatetoPrivacy(PrivPage)
{
    if(g_CurrentCKPT == CKPT_REGISTER1) {
        Reg1SaveRadioState();
    }

    if(g_CurrentCKPT == CKPT_REGISTER3) {
        Reg3SaveSettings();
    }

    if (PrivPage == "MS")
        Navigate("setup\\prvcyMS.htm");
    else if (PrivPage == "Activation_Policy")
        Navigate("setup\\act_plcy.htm");
    else if (PrivPage == "AutoUpdate_Policy")
        Navigate("setup\\au_plcy.htm");
    else
        Navigate("setup\\OEMpriv.htm");
}
PA<HTML id=dlgOrganizeFavorites STYLE="font-family: MS Shell Dlg; font-size: 8pt; width: 41.2em; height: 31.0em">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">
<head>
<style>
.button {color: BUTTONTEXT; font-size: 8pt}
.info {font-size: 8pt; color: WINDOWTEXT}
.btext {color: BUTTONTEXT}
LI {line-height:10pt}
A {text-decoration: none; color: WINDOWTEXT}
</style>
<TITLE id=txtTitleOrgFavsDialog>
Organizza Preferiti
</TITLE>
<script>
window.onerror = HandleError;
var g_strUrl;
var g_rgUrlsToSynch = new Array(0);
var g_fSubscriptionsEnabled;
var g_dxEllipses = 0;
var g_dxEllipsesBold = 0;
var L_Ellipses_Text = "...";
function callHelp(elm)
{
if (null != elm.helpid)
{
window.showHelp(elm.helpfile, "" + parseInt(elm.helpid), "popup");
}
else
{
if ("BODY" != elm.tagName)
{
callHelp(elm.parentElement);
}
}
}
document.onhelp = new Function("callHelp(window.event.srcElement)");
function documentMouseUp()
{
if (window.event.button == 2)
{
callHelp(window.event.srcElement);
}
}
document.onmouseup = new Function("documentMouseUp()");
function HandleError(message, url, line)
{
var L_Dialog_ErrorMessage = "Errore nella finestra di dialogo.";
var L_ErrorNumber_Text = "Errore: ";
var str = L_Dialog_ErrorMessage + "\n\n"
+ L_ErrorNumber_Text + line + "\n"
+ message;
alert (str);
window.close();
return true;
}
function BodyOnKeyPress(nCode)
{
if (nCode == 27)
{
window.close();
return;
}
}
function MeasureText(strText, fBold, widthMaximum)
{
var oSpanToUse = (fBold ? spanMeasureBold : spanMeasure);
if (oSpanToUse.offsetWidth < widthMaximum)
return strText;
var dxEllipses = (fBold ? g_dxEllipsesBold : g_dxEllipses);
var iCutoff = strText.length * (widthMaximum / (oSpanToUse.offsetWidth + dxEllipses));
oSpanToUse.innerText = strText.substring(0, iCutoff - 1) + L_Ellipses_Text;
if (fBold)
{
iCutoff += 3;
}
for (cExtraCutoff = 1; (oSpanToUse.offsetWidth > widthMaximum) && (cExtraCutoff < 30); cExtraCutoff++)
{
oSpanToUse.innerText = spanMeasure.innerText.substring(0, iCutoff-cExtraCutoff) + L_Ellipses_Text;
}
return oSpanToUse.innerText;
}
function OnSelectionChange(cItems, hItem, strName, strUrl, cVisits, strDate, fAvailableOffline)
{
if (cItems == -1)
{
BodyOnKeyPress(27);
return;
}
if (cItems == 0)
{
textProperties.innerHTML = "";
return;
}
g_strUrl = strUrl;
if (g_dxEllipses == 0)
{
spanMeasure.innerText = L_Ellipses_Text;
g_dxEllipses = spanMeasure.offsetWidth;
spanMeasureBold.innerText = L_Ellipses_Text;
g_dxEllipsesBold = spanMeasureBold.offsetWidth;
}
spanMeasureBold.innerText = strName;
strNameShort = MeasureText(spanMeasureBold.innerText, true, textProperties.offsetWidth - 4);
spanMeasure.innerText = strUrl;
strUrlShort = MeasureText(spanMeasure.innerText, false, textProperties.offsetWidth - 4);
spanMeasure.innerText = "";
var L_FavoritesFolder_Text = "Cartella Preferiti";
var L_ModifiedColon_Text = "Ultima modifica:";
if (cVisits != -1)
{
var strOffline = "";
var L_MakeAvailableOffline_Text = "<U>D</U>isponibile in modalità non in linea";
var L_MakeAvailableOfflineAccesskey_Text = "d";
var L_Properties_Text = "<U>P</U>roprietà";
var L_PropertiesAccesskey_Text = "f";
if (g_fSubscriptionsEnabled && (strUrl.substring(0,4) == "http") )
{
strOffline = "<input type=checkbox align=";
if(document.dir == "rtl")
{
strOffline +="right";
}
else
{
strOffline +="left";
}
strOffline +=" TABINDEX=5 ACCESSKEY=" + L_MakeAvailableOfflineAccesskey_Text + " id=chkOffline "
if (fAvailableOffline != 0)
strOffline += "CHECKED"
strOffline += " onclick='ToggleOffline(this)' helpid=50486 helpfile='iexplore.hlp'><LABEL FOR=chkOffline TABINDEX=-1>" + L_MakeAvailableOffline_Text + "</LABEL>";
strOffline += "<BR><BR><BUTTON id=btnProperties TABINDEX=6 style='visibility: "
if (fAvailableOffline != 0)
strOffline += "visible"
else
strOffline += "hidden"
strOffline += "' class=button ACCESSKEY=" + L_PropertiesAccesskey_Text + " onclick='Properties()' helpid=50489 helpfile='iexplore.hlp'>" + L_Properties_Text + "</BUTTON><BR>";
}
var L_TimesVisited_Text = "Numero visite: ";
var L_LastVisited_Text = "Ultima visita: ";
var L_LastVisitedNeedsLineBreak_Text = "";
var strTemp = strName + "\n" + strUrl;
var re = /'/g;
strTemp = strTemp.replace(re, "´");
var oA = document.createElement("A");
var oName = document.createElement("B");
var oBR1 = document.createElement("BR");
var oUrl = document.createElement("SPAN");
var oBR2 = document.createElement("BR");
var oTV = document.createElement("SPAN");
var oLV = document.createElement("SPAN");
var oBR3 = document.createElement("BR");
var oBR4 = document.createElement("BR");
if (oA && oName && oUrl && oBR1 && oBR2 && oBR3 && oBR4 && oTV && oLV)
{
textProperties.innerHTML = "";
oA.Title = strTemp;
oName.innerText = strNameShort;
oA.appendChild(oName);
oA.appendChild(oBR1);
oUrl.innerText = strUrlShort;
oA.appendChild(oUrl);
textProperties.appendChild(oA);
textProperties.appendChild(oBR2);
oTV.innerText = L_TimesVisited_Text + cVisits;
textProperties.appendChild(oTV);
textProperties.appendChild(oBR3);
if (L_LastVisitedNeedsLineBreak_Text == "")
{
oLV.innerText = L_LastVisited_Text + strDate;
textProperties.appendChild(oLV);
textProperties.appendChild(oBR4);
}
else
{
var oBR5 = document.createElement("BR");
var oLV2 = document.createElement("SPAN");
if (oBR5 && oLV2)
{
oLV.innerText = L_LastVisited_Text;
oLV2.innerText = strDate;
textProperties.appendChild(oLV);
textProperties.appendChild(oBR5);
textProperties.appendChild(oLV2);
textProperties.appendChild(oBR4);
}
}
textProperties.innerHTML += strOffline;
}
}
else
{
var oName = document.createElement("B");
var oBR1 = document.createElement("BR");
var oFldr = document.createElement("SPAN");
var oBR2 = document.createElement("BR");
var oBR3 = document.createElement("BR");
var oMod = document.createElement("B");
var oBR4 = document.createElement("BR");
var oDate = document.createElement("SPAN");
if (oName && oBR1 && oFldr && oBR2 && oBR3 && oMod && oBR4 && oDate)
{
textProperties.innerHTML = "";
oName.innerText = strNameShort;
textProperties.appendChild(oName);
textProperties.appendChild(oBR1);
oFldr.innerText = L_FavoritesFolder_Text;
textProperties.appendChild(oFldr);
textProperties.appendChild(oBR2);
textProperties.appendChild(oBR3);
oMod.innerText = L_ModifiedColon_Text;
textProperties.appendChild(oMod);
textProperties.appendChild(oBR4);
oDate.innerText = strDate;
textProperties.appendChild(oDate);
}
}
tdProperties.noWrap=true;
textProperties.noWrap=true;
}
function EnableButtons()
{
g_fSubscriptionsEnabled = nsc.SubscriptionsEnabled;
var pszInitialDir = window.dialogArguments;
if (pszInitialDir && (pszInitialDir.length > 0))
{
nsc.SetRoot(pszInitialDir);
}
tdNsc.blur();
tdNewFolder.focus();
}
function ToggleOffline(chkOffline)
{
if (chkOffline.checked)
{
if (!nsc.CreateSubscriptionForSelection())
chkOffline.checked = false;
else
{
g_rgUrlsToSynch[g_strUrl] = true;
}
}
else
{
if (!nsc.DeleteSubscriptionForSelection())
chkOffline.checked = true;
else
delete g_rgUrlsToSynch[g_strUrl];
}
btnProperties.style.visibility = (chkOffline.checked ? "visible" : "hidden");
}
function BuildSynchList()
{
window.returnValue = "";
for (strUrl in g_rgUrlsToSynch)
{
window.returnValue += strUrl + "\0";
}
}
function Properties()
{
nsc.InvokeContextMenuCommand("properties");
}
function OnResize()
{
document.recalc(true);
}
function TdNscWidth()
{
return Math.max(0, document.body.offsetWidth - tableButtons.offsetWidth - (tableMain.border * 3) - (2 * parseInt(tdNsc.style.borderWidth)) - 6);
}
function TdPropertiesHeight()
{
return Math.max(0, document.body.offsetHeight - (tableMain.border * 2) - tdProperties.offsetTop - tdDone.offsetHeight - 8);
}
</script>
</HEAD>
<body style="margin-left: 0; margin-right: 0; margin-top: 0; margin-bottom: 0; background: threedface; align: center"
scroll="no" onkeydown="BodyOnKeyPress(event.keyCode)" onkeypress="BodyOnKeyPress(event.keyCode)" onload="EnableButtons()" onunload="BuildSynchList()" onresize="OnResize()">
<table id=tableMain cols=3 border=10 bordercolor=THREEDFACE>
<TR id=mainrow>
<TD valign=top id=infotext class=info>
Per creare una nuova cartella, fare clic sul pulsante Crea cartella. Per rinominare o eliminare un elemento, selezionarlo, quindi fare clic su Rinomina o Elimina.
</TD>
<TD id=tdColSpacing width=0>
</TD>
<TD id=tdNscHolder rowspan=3 height=100%>
<TABLE cols=1 width=100% height=100%>
<TD id=tdNsc style="height:100%; border:2px inset WINDOW;">
<object id=nsc TABINDEX=10 title="Elenco Preferiti" accesskey="T"
style="background:window; HEIGHT=100%; WIDTH=100%"
CLASSID='clsid:55136805-B2DE-11D1-B9F2-00A0C98BC547'
onkeypress="BodyOnKeyPress(event.keyCode)"
helpid=50490
helpfile="iexplore.hlp">
</OBJECT>
</TD>
</TABLE>
</TD>
</TR>
<TR id=rowButtons>
<TD>
<table id=tableButtons cols=2 width=200>
<tr height=20>
<TD align=center width=50%>
<BUTTON id=tdNewFolder TABINDEX=1 style="width: 9em;" ACCESSKEY=C class=button onclick="nsc.NewFolder(); event.returnValue = false" helpid=50484 helpfile="iexplore.hlp">
<U>C</U>rea cartella
</BUTTON>
</TD>
<TD align=center width=50%>
<BUTTON id=tdRename TABINDEX=2 style="width: 9em;" ACCESSKEY=r class=button onclick="nsc.InvokeContextMenuCommand('rename'); event.returnValue = false" helpid=50007 helpfile="iexplore.hlp">
<U>R</U>inomina
</BUTTON>
</TD>
</tr>
<tr height=20>
<td width=50% align=center>
<BUTTON id=tdMoveTo TABINDEX=3 style="width: 9em;" ACCESSKEY=o class=button onclick="nsc.MoveSelectionTo(); event.returnValue = false" helpid=50006 helpfile="iexplore.hlp">
Sp<U>o</U>sta cartella...
</BUTTON>
</td>
<td width=50% align=center>
<BUTTON id=tdDelete TABINDEX=4 style="width: 9em;" ACCESSKEY=e class=button onclick="nsc.InvokeContextMenuCommand('delete'); event.returnValue = false" helpid=50008 helpfile="iexplore.hlp">
<U>E</U>limina
</BUTTON>
</td>
</tr>
</table>
</TD>
</TR>
<TR id=rowProperties vAlign=top style="padding-left:1px; padding-right:0px">
<TD id=tdProperties style="border-width:2px; margin-left:5px; margin-top:5px; margin-right:5px;" vAlign=top>
<DIV id=textProperties class=info style="border-width:2px; border-style:groove; border-color:window; width:100%; height:expression(Math.max(0, tdProperties.offsetHeight - (2 * parseInt(tdProperties.style.borderWidth)))); overflow:hidden; nowrap:true; position:absolute;">
Selezionare un elemento preferito per visualizzarne le proprietà o renderlo disponibile per la visualizzazione non in linea.
</DIV>
</TD>
</TR>
<TR id=rowCloseButton>
<TD id= cellCloseButton colspan=3 align=right>
<BUTTON id=tdDone TABINDEX=11 style="width: 9em;" ACCESSKEY=h class=button onclick="window.close();" helpid=50010 helpfile="iexplore.hlp">
C<U>h</U>iudi
</BUTTON>
</TD>
</TR>
</table>
<SPAN id=spanMeasure style="visibility:hidden;" class=info></SPAN>
<SPAN id=spanMeasureBold style="visibility:hidden;font-weight:bold;" class=info></SPAN>
<script defer for=nsc event="FavoritesSelectionChange(cItems, hItem, strName, strUrl, cVisits, strDate, fAvailableOffline)">
OnSelectionChange(cItems, hItem, strName, strUrl, cVisits, strDate, fAvailableOffline);
</script>
<script defer>
tdNscHolder.style.setExpression("width", "TdNscWidth()");
rowProperties.style.setExpression("height", "TdPropertiesHeight()");
</script>
</BODY>
</HTML>
P<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

 <head>
  <meta HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
  <title>Errore durante l'elaborazione del criterio.</title>

  <script language="JavaScript">
   var site = window.parent.dialogArguments.url;

   function printSite()
   {
       siteContainer.innerText = site;
   }

   function BodyOnKeyPress(nCode)
   { 
       if (nCode == 27)    //ESC
       {
           //this return value means that the Cancel button was clicked
           window.returnValue = 0;

           //close the dialog
           window.close();
       }
   }
  </script>
 </head>

 <body id="body" 
       style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;" 
       onkeypress="BodyOnKeyPress(event.keyCode)"
       onload="printSite();">
  <p id="viewPolicyError" style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;">
   Impossibile visualizzare l'informativa sulla privacy di <span id="siteContainer"></span>.  Per visualizzare l'informativa sulla privacy del sito, contattare direttamente il sito.
  </p>
 </body>

</html>
PA<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

 <head>
  <meta HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
  <title>Ricerca informativa sulla privacy in corso...</title>

  <script language="JavaScript">
   var site = window.parent.dialogArguments.url;

   function printSite()
   {
       siteContainer.innerText = site;
   }

   function BodyOnKeyPress(nCode)
   { 
       if (nCode == 27)    //ESC
       {
           //this return value means that the Cancel button was clicked
           window.returnValue = 0;

           //close the dialog
           window.close();
       }
   }
  </script>
 </head>

 <body id="body" 
       style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;" 
       onkeypress="BodyOnKeyPress(event.keyCode)"
       onload="printSite();">
  <p id="policyLooking" style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;">
   Ricerca informativa sulla privacy di <span id="siteContainer"></span>.
  </p>
 </body>

</html>
PA<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

 <head>
  <meta HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
  <title>Impossibile trovare un'informativa sulla privacy.</title>

  <script language="JavaScript">
   var site = window.parent.dialogArguments.url;

   function printSite()
   {
       siteContainer.innerText = site;
   }

   function BodyOnKeyPress(nCode)
   { 
       if (nCode == 27)    //ESC
       {
           //this return value means that the Cancel button was clicked
           window.returnValue = 0;

           //close the dialog
           window.close();
       }
   }
  </script>
 </head>

 <body id="body" 
       style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;" 
       onkeypress="BodyOnKeyPress(event.keyCode)"
       onload="printSite()">
  <p id="noPolicyFound" style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;">
   Impossibile trovare l'informativa sulla privacy per <span id="siteContainer"></span>. Per visualizzare l'informativa sulla privacy del sito, contattare direttamente il sito.
  </p>
 </body>

</html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

 <head>
  <meta HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
  <title>Errore di sintassi.</title>

  <script language="JavaScript">
   var site = window.parent.dialogArguments.url;

   function printSite()
   {
       siteContainer.innerText = site;
   }

   function BodyOnKeyPress(nCode)
   { 
       if (nCode == 27)    //ESC
       {
           //this return value means that the Cancel button was clicked
           window.returnValue = 0;

           //close the dialog
           window.close();
       }
   }
  </script>
 </head>

 <body id="body" 
       style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;" 
       onkeypress="BodyOnKeyPress(event.keyCode)"
       onload="printSite();">
  <p id="viewPolicySyntaxError" style="font-family: MS Shell Dlg;font-size:8pt;color:windowtext;background-color:threedface;">
   Impossibile visualizzare l'informativa sulla privacy di <span id="siteContainer"></span>&nbsp; a causa di un errore di sintassi. Per visualizzare l'informativa sulla privacy, contattare direttamente il sito. 
  </p>
 </body>

</html>
PA<HTML DIR=LTR id=dlgPrivacyPolicy>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">
<HEAD>
<TITLE id=dialogTitle>
Informativa sulla privacy
</TITLE>
<STYLE>
HTML { font-family: MS Shell Dlg; font-size: 8pt; width: 52.65em; height: 42.3em; }
BODY { font-family: MS Shell Dlg; font-size: 8pt; }
FIELDSET { font-family: MS Shell Dlg; font-size: 8pt; }
TABLE { font-family: MS Shell Dlg; font-size: 8pt; }
INPUT { font-family: MS Shell Dlg; font-size: 8pt; }
LABEL { font-family: MS Shell Dlg; font-size: 8pt; }
BUTTON { font-family: MS Shell Dlg; font-size: 8pt; width: 7 em; height: 2.2em; }
</STYLE>
<SCRIPT language="JavaScript">
var siteData = window.dialogArguments;
window.returnValue = 0;
function okButtonClick()
{
if( radDefault.checked == true)
{
window.returnValue = 1;
}
else if (radAccept.checked == true)
{
window.returnValue = 2;
}
else if (radReject.checked == true)
{
window.returnValue = 3;
}
window.close();
}
function cancelButtonClick()
{
window.returnValue = 0;
window.close();
}
function getMinCookieDomainQuoted()
{
minCookieDomain.innerText = '"'+siteData.cookieUrl+'"';
}
function checkCurrentPreference()
{
if( siteData.acceptRejectOrDefault == "a")
radAccept.checked = true;
else if( siteData.acceptRejectOrDefault == "r")
radReject.checked = true;
else if( siteData.acceptRejectOrDefault == "d")
radDefault.checked = true;
if( siteData.fixedAcceptRejectOrDefault)
{
radAccept.disabled = true;
radReject.disabled = true;
radDefault.disabled = true;
}
}
function CheckIfPolicyFound()
{
var policyDone = siteData.flagPolicyHuntDone;
document.body.all("fldPolicy").children("policyframe").src = siteData.urlPolicyHuntView;
if( policyDone == false)
setTimeout( CheckIfPolicyFound, 200);
}
function BodyOnKeyPress(nCode)
{
if (nCode == 27)
{
cancelButtonClick();
}
else if (nCode == 13)
{
okButtonClick();
}
}
</SCRIPT>
</HEAD>
<BODY ID=bdy style="color: windowtext; background: threedface; " scroll=no
onkeypress="BodyOnKeyPress(event.keyCode)" onload="getMinCookieDomainQuoted();">
<TABLE style="width:100%;height:100%">
<TR>
<TD>
<FIELDSET align=absMiddle id=fldPolicy style="border: 0;height:100%">
<IFRAME NAME="policyframe" id=policyframe application="no"
style="width:100%; height:100%; background: threedface; ">
</IFRAME>
</FIELDSET>
</TD>
</TR>
<TR>
<TD style="height:1%">
<TABLE style="width:100%">
<TR>
<TD>
<FIELDSET align=absMiddle id=fldPreference style="padding:1mm">
<DIV id=lblQuery style="height: 1.5 em;">
<p ID="query">
Indicare la modalità di gestione dei cookie di <span id="minCookieDomain"></span>.
</p>
</DIV>
<TABLE CELLPADDING=0 CELLSPACING=0>
<TR>
<TD>
&nbsp;&nbsp;&nbsp;<INPUT id=radDefault type=radio name=radPreference ACCESSKEY=f
tabIndex=3 style="width: 1.2em; ">
</TD>
<TD>
<LABEL ID=lblDefault FOR=radDefault>
&nbsp;&nbsp;Con<u>f</u>ronta l'informativa sulla privacy dei cookie con le impostazioni correnti.
</LABEL>
</TD>
</TR>
<TR>
<TD>
&nbsp;&nbsp;&nbsp;<INPUT id=radAccept type=radio name=radPreference ACCESSKEY=c
tabIndex=4 style="width: 1.2em;">
</TD>
<TD>
<LABEL ID=lblAccept FOR=radAccept>
&nbsp;&nbsp;<u>C</u>onsenti sempre utilizzo dei cookie di questo sito.
</LABEL>
</TD>
</TR>
<TR>
<TD>
&nbsp;&nbsp;&nbsp;<INPUT id=radReject type=radio name=radPreference ACCESSKEY=N
tabIndex=5 style="width: 1.2em;">
</TD>
<TD>
<LABEL ID=lblReject FOR=radReject>
&nbsp;&nbsp;<u>N</u>on consentire l'utilizzo dei cookie di questo sito.
</LABEL>
<TD>
</TR>
</TABLE>
</FIELDSET>
</TD>
<TD valign=top width="1%">
<TABLE>
<TR>
<TD>
<BUTTON id=btnOk onClick="okButtonClick()" tabIndex=1 ACCESSKEY=o type=submit>
OK
</BUTTON>
</TD>
</TR>
<TR>
<TD>
<BUTTON id=btnCancel onClick="cancelButtonClick()" tabIndex=2 ACCESSKEY=a type=submit>
Annulla
</BUTTON>
</TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<SCRIPT language="JavaScript">
checkCurrentPreference();
CheckIfPolicyFound();
</SCRIPT>
</BODY>
</HTML>
